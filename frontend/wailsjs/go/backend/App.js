// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

export function AddOrUpdateProject(arg1) {
  return window['go']['backend']['App']['AddOrUpdateProject'](arg1);
}

export function AddOrUpdateSchedule(arg1) {
  return window['go']['backend']['App']['AddOrUpdateSchedule'](arg1);
}

export function DealDebugSignal(arg1) {
  return window['go']['backend']['App']['DealDebugSignal'](arg1);
}

export function DebugSubFlow(arg1, arg2) {
  return window['go']['backend']['App']['DebugSubFlow'](arg1, arg2);
}

export function DeleteProject(arg1) {
  return window['go']['backend']['App']['DeleteProject'](arg1);
}

export function DeleteSubFlow(arg1, arg2) {
  return window['go']['backend']['App']['DeleteSubFlow'](arg1, arg2);
}

export function GetBasicConfigData() {
  return window['go']['backend']['App']['GetBasicConfigData']();
}

export function GetElementImage(arg1, arg2) {
  return window['go']['backend']['App']['GetElementImage'](arg1, arg2);
}

export function GetLoginData() {
  return window['go']['backend']['App']['GetLoginData']();
}

export function GetMainFlow(arg1) {
  return window['go']['backend']['App']['GetMainFlow'](arg1);
}

export function GetNextTriggerTime(arg1) {
  return window['go']['backend']['App']['GetNextTriggerTime'](arg1);
}

export function GetProjectWindowsElements(arg1) {
  return window['go']['backend']['App']['GetProjectWindowsElements'](arg1);
}

export function GetRunningFlows() {
  return window['go']['backend']['App']['GetRunningFlows']();
}

export function GetSelectedWindowsElement(arg1) {
  return window['go']['backend']['App']['GetSelectedWindowsElement'](arg1);
}

export function GetSubFlow(arg1, arg2) {
  return window['go']['backend']['App']['GetSubFlow'](arg1, arg2);
}

export function GetWindowsElement(arg1, arg2) {
  return window['go']['backend']['App']['GetWindowsElement'](arg1, arg2);
}

export function GetWindowsElementList(arg1) {
  return window['go']['backend']['App']['GetWindowsElementList'](arg1);
}

export function HighlightCurrentElement(arg1) {
  return window['go']['backend']['App']['HighlightCurrentElement'](arg1);
}

export function ListProject() {
  return window['go']['backend']['App']['ListProject']();
}

export function Login(arg1) {
  return window['go']['backend']['App']['Login'](arg1);
}

export function OpenDialog(arg1) {
  return window['go']['backend']['App']['OpenDialog'](arg1);
}

export function ParseAllPlugin() {
  return window['go']['backend']['App']['ParseAllPlugin']();
}

export function PipInstallPackage(arg1, arg2) {
  return window['go']['backend']['App']['PipInstallPackage'](arg1, arg2);
}

export function PipListInstallPackage(arg1, arg2) {
  return window['go']['backend']['App']['PipListInstallPackage'](arg1, arg2);
}

export function PipUnInstallPackage(arg1, arg2) {
  return window['go']['backend']['App']['PipUnInstallPackage'](arg1, arg2);
}

export function QueryAllExecution() {
  return window['go']['backend']['App']['QueryAllExecution']();
}

export function QuerySchedulePage() {
  return window['go']['backend']['App']['QuerySchedulePage']();
}

export function ReadProjectConfig(arg1) {
  return window['go']['backend']['App']['ReadProjectConfig'](arg1);
}

export function RemoveExecution(arg1) {
  return window['go']['backend']['App']['RemoveExecution'](arg1);
}

export function RemoveSchedule(arg1) {
  return window['go']['backend']['App']['RemoveSchedule'](arg1);
}

export function RemoveWindowsElement(arg1, arg2) {
  return window['go']['backend']['App']['RemoveWindowsElement'](arg1, arg2);
}

export function RestartReplCommand(arg1) {
  return window['go']['backend']['App']['RestartReplCommand'](arg1);
}

export function RunActivity(arg1, arg2) {
  return window['go']['backend']['App']['RunActivity'](arg1, arg2);
}

export function RunMainFlow(arg1) {
  return window['go']['backend']['App']['RunMainFlow'](arg1);
}

export function RunSubFlow(arg1, arg2) {
  return window['go']['backend']['App']['RunSubFlow'](arg1, arg2);
}

export function SaveBasicConfigData(arg1) {
  return window['go']['backend']['App']['SaveBasicConfigData'](arg1);
}

export function SaveMainFlow(arg1, arg2) {
  return window['go']['backend']['App']['SaveMainFlow'](arg1, arg2);
}

export function SaveProjectConfig(arg1, arg2) {
  return window['go']['backend']['App']['SaveProjectConfig'](arg1, arg2);
}

export function SaveProjectDependency(arg1, arg2) {
  return window['go']['backend']['App']['SaveProjectDependency'](arg1, arg2);
}

export function SaveSubFlow(arg1, arg2, arg3) {
  return window['go']['backend']['App']['SaveSubFlow'](arg1, arg2, arg3);
}

export function SaveWindowsElement(arg1, arg2, arg3, arg4) {
  return window['go']['backend']['App']['SaveWindowsElement'](arg1, arg2, arg3, arg4);
}

export function SelectExecutionLog(arg1) {
  return window['go']['backend']['App']['SelectExecutionLog'](arg1);
}

export function SelectProject(arg1) {
  return window['go']['backend']['App']['SelectProject'](arg1);
}

export function StartCheck(arg1, arg2) {
  return window['go']['backend']['App']['StartCheck'](arg1, arg2);
}

export function StartCheckWindowsElement(arg1) {
  return window['go']['backend']['App']['StartCheckWindowsElement'](arg1);
}

export function StartInVirtualDesk(arg1) {
  return window['go']['backend']['App']['StartInVirtualDesk'](arg1);
}

export function StartMonitorLog(arg1) {
  return window['go']['backend']['App']['StartMonitorLog'](arg1);
}

export function StartPick() {
  return window['go']['backend']['App']['StartPick']();
}

export function StartPickWindowsElement() {
  return window['go']['backend']['App']['StartPickWindowsElement']();
}

export function StopMonitorLog(arg1) {
  return window['go']['backend']['App']['StopMonitorLog'](arg1);
}

export function TerminateMainFlow(arg1) {
  return window['go']['backend']['App']['TerminateMainFlow'](arg1);
}

export function TerminateSubFlow() {
  return window['go']['backend']['App']['TerminateSubFlow']();
}

export function ToggleScheduleById(arg1, arg2) {
  return window['go']['backend']['App']['ToggleScheduleById'](arg1, arg2);
}
