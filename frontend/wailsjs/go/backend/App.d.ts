// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {models} from '../models';
import {forms} from '../models';
import {plugin} from '../models';

export function AddOrUpdateProject(arg1:models.Project):Promise<void>;

export function AddOrUpdateSchedule(arg1:models.Schedule):Promise<void>;

export function DealDebugSignal(arg1:string):Promise<void>;

export function DebugSubFlow(arg1:string,arg2:string):Promise<void>;

export function DeleteProject(arg1:string):Promise<void>;

export function DeleteSubFlow(arg1:string,arg2:string):Promise<void>;

export function GetBasicConfigData():Promise<{[key: string]: string}>;

export function GetElementImage(arg1:string,arg2:string):Promise<string>;

export function GetImages(arg1:string):Promise<string>;

export function GetLoginData():Promise<forms.LoginForm>;

export function GetMainFlow(arg1:string):Promise<string>;

export function GetNextTriggerTime(arg1:string):Promise<string>;

export function GetProjectWindowsElements(arg1:string):Promise<string>;

export function GetQrCode():Promise<string>;

export function GetRunningFlows():Promise<Array<forms.RunningInstance>>;

export function GetSelectedWindowsElement(arg1:string):Promise<void>;

export function GetSubFlow(arg1:string,arg2:string):Promise<string>;

export function GetWindowsElement(arg1:string,arg2:string):Promise<string>;

export function GetWindowsElementList(arg1:string):Promise<void>;

export function HighlightCurrentElement(arg1:string):Promise<void>;

export function HighlightImage(arg1:string,arg2:forms.ImageData):Promise<void>;

export function ListProject():Promise<Array<models.Project>>;

export function Login(arg1:forms.LoginForm):Promise<void>;

export function Logout():Promise<void>;

export function OpenDialog(arg1:{[key: string]: string}):Promise<string>;

export function ParseAllPlugin():Promise<Array<plugin.Activity>>;

export function PipInstallPackage(arg1:string,arg2:forms.PipPackage):Promise<void>;

export function PipListInstallPackage(arg1:string,arg2:boolean):Promise<Array<forms.Package>>;

export function PipUnInstallPackage(arg1:string,arg2:string):Promise<void>;

export function QueryAllExecution():Promise<Array<forms.ExecutionForm>>;

export function QuerySchedulePage():Promise<Array<models.Schedule>>;

export function ReadProjectConfig(arg1:string):Promise<models.ProjectConfig>;

export function Register(arg1:string,arg2:string):Promise<void>;

export function RemoveExecution(arg1:Array<forms.ExecutionForm>):Promise<void>;

export function RemoveImage(arg1:string,arg2:string):Promise<void>;

export function RemoveSchedule(arg1:string):Promise<void>;

export function RemoveWindowsElement(arg1:string,arg2:string):Promise<void>;

export function RestartReplCommand(arg1:string):Promise<void>;

export function RunActivity(arg1:string,arg2:string):Promise<void>;

export function RunMainFlow(arg1:string):Promise<void>;

export function RunSubFlow(arg1:string,arg2:string):Promise<void>;

export function SaveBasicConfigData(arg1:{[key: string]: string}):Promise<void>;

export function SaveImage(arg1:string,arg2:forms.ImageData):Promise<void>;

export function SaveMainFlow(arg1:string,arg2:string):Promise<void>;

export function SaveProjectConfig(arg1:string,arg2:string):Promise<void>;

export function SaveProjectDependency(arg1:string,arg2:Array<string>):Promise<void>;

export function SaveSubFlow(arg1:string,arg2:string,arg3:string):Promise<void>;

export function SaveWindowsElement(arg1:string,arg2:string,arg3:string,arg4:string):Promise<void>;

export function SelectExecutionLog(arg1:string):Promise<string>;

export function SelectProject(arg1:string):Promise<models.Project>;

export function StartCapture():Promise<string>;

export function StartCheck(arg1:string,arg2:string):Promise<void>;

export function StartCheckWindowsElement(arg1:string):Promise<void>;

export function StartInVirtualDesk(arg1:string):Promise<void>;

export function StartMonitorLog(arg1:string):Promise<void>;

export function StartPick():Promise<void>;

export function StartPickWindowsElement():Promise<void>;

export function StopMonitorLog(arg1:string):Promise<void>;

export function TerminateMainFlow(arg1:string):Promise<void>;

export function TerminateSubFlow():Promise<void>;

export function ToggleScheduleById(arg1:string,arg2:boolean):Promise<void>;
